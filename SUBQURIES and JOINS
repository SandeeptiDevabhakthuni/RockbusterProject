These Quries,Subquries and JOINS are made to answer bussiness questions to Rockbuster Managment.

-- Query to find top 5 customers
SELECT a.customer_id, b.first_name, b.last_name, e.country, d.city, SUM (amount) AS total_paid_amount
FROM payment a 
INNER JOIN customer B on a.customer_id = b.customer_id
INNER JOIN address c on b.address_id = c.address_id
INNER JOIN city d on c.city_id = d.city_id
INNER JOIN country e on d.country_id = e.country_id
GROUP BY a.customer_id, b.first_name, b.last_name, e.country,d.city
HAVING city in

-- Query to find the top 10 cities 
(SELECT city
FROM customer a
INNER JOIN address b on a.address_id = b.address_id
INNER JOIN city c on b.city_id = c.city_id
INNER JOIN country d on c.country_id = d.country_id
WHERE country IN

-- Query to identifiy the top 10 counties 
(SELECT country
FROM customer a 
INNER JOIN address b on a.address_id = b.address_id
INNER JOIN city c on b.city_id = c.city_id
INNER JOIN country d on c.country_id = d.country_id
GROUP BY country
ORDER BY COUNT (customer_id) desc
LIMIT 10)

GROUP BY country, city
ORDER BY COUNT (customer_id) desc
LIMIT 10) 

ORDER BY SUM (amount) desc
LIMIT 5


-- Query to identifiy the top 10 counties 
SELECT country
COUNT (customer_id) AS total_customer
FROM customer a 
INNER JOIN address b on a.address_id = b.address_id
INNER JOIN city c on b.city_id = c.city_id
INNER JOIN country d on c.country_id = d.country_id
GROUP BY country
ORDER BY COUNT (customer_id) desc
LIMIT 10


--To get the TOP 10 that contributed the most to revenue gain
SELECT country,		
       COUNT(DISTINCT A.customer_id) AS customer_count,	
       SUM(amount) AS total_payment	
FROM customer A		
INNER JOIN address B ON A.address_id = B.address_id	
INNER JOIN city C ON B.city_id = C.city_id	
INNER JOIN country D ON C.country_ID = D.country_ID	
INNER JOIN payment E ON a.customer_id = E.customer_id	
GROUP BY country 		
ORDER BY total_payment DESC		
LIMIT 10

--Movies that contributed the most revenue gain
SELECT 	A.title,	
	COUNT(C.rental_id) AS rental_totals,	
	       SUM (amount) AS total_amount_paid, 	
	   AVG (rental_duration) AS average_rental_duration,	
	   AVG (rental_rate) AS average_rental_rate	
FROM film A		
INNER JOIN inventory B ON A.film_id = B.film_id		
INNER JOIN rental C ON B.inventory_id = C.inventory_id		
INNER JOIN payment D ON C.customer_id = D.customer_id		
GROUP BY A.title		
ORDER BY SUM (amount) DESC	--or ASC if we want to get bottom 10 titles	
LIMIT 10


--Movies that contributed the bottom 10 titles
SELECT 	A.title,	
	COUNT(C.rental_id) AS rental_totals,	
	 SUM (amount) AS total_amount_paid, 	
	  AVG (rental_duration) AS average_rental_duration,	
	  AVG (rental_rate) AS average_rental_rate	
FROM film A		
INNER JOIN inventory B ON A.film_id = B.film_id		
INNER JOIN rental C ON B.inventory_id = C.inventory_id		
INNER JOIN payment D ON C.customer_id = D.customer_id		
GROUP BY A.title		
ORDER BY SUM (amount) ASC		
LIMIT 10		

--List of the gained revenue pro movie's category
SELECT F.category_id,	
F.name as category_name,	
COUNT (DISTINCT A.film_id) AS count_film_pro_category,	
COUNT (C.rental_id) AS rental_total,	
       SUM(amount) AS total_amount_paid	
FROM film A	
INNER JOIN inventory B ON A.film_id = B.film_id	
INNER JOIN rental C ON B.inventory_id = C.inventory_id	
INNER JOIN payment D ON C.customer_id = D.customer_id	
INNER JOIN film_category E ON A.film_id = E.film_id	
INNER JOIN category F ON E.category_id = F.category_id	
GROUP BY  F.category_id, category_name	
ORDER BY total_amount_paid DESC


--What was the average rental duration for all videos
SELECT		
	COUNT(film_id) AS count_of_movies,	
	AVG(rental_duration) AS average_rental_duration,	
	MIN(rental_duration) AS minimum_rental_duration,	
	MAX(rental_duration) AS maximum_rental_duration	
FROM   film	
